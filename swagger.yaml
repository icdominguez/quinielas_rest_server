openapi: 3.0.0
info:
  title: Quinielas API
  description: Swagger Quinielas - OpenAPI 3.0.
  version: 0.0.1
servers:
  - url: http://localhost:8080/api
    description: Server for testing
tags:
  - name: team
    description: Operation about teams
  - name: league
    description: Everything about leagues
paths:
  /team:
    get:
      tags:
        - team
      summary: Returns a specific team by the id provided
      description: Return a team if it exists in database
      operationId: getTeamById
      responses:
        '200':
          description: Searched team
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /team/add:
    post:
      tags: 
        - team
      summary: Adds a new Team for an specific league.
      description: New team will be added if not exist to the specified league uploading the image attached to cloudinary.
      operationId: addTeam
      requestBody:
        content:
          multipart/form-data:
            schema:
                type: object
                properties:
                  name: 
                    type: string
                    description: Name of the new team
                    required: true
                  image:
                    type: string
                    format: binary
                    description: Appropiate logo for the new team
                    required: true
                  league:
                    type: string
                    description: Object id of the league related to the new team
                    required: true
      responses:
        '200':
          description: Team schema from mongoose
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Team'         
  /team/{teamId}:
    delete:
      tags:
        - team
      summary: Deletes a team by its object id
      parameters:
        - name: teamId
          in: path
          description: team to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Team succesfully deleted from database'
        '400':
          description: 'Invalid id provided'
  /team/{teamId}/image:
    put:
      tags:
        - team
      summary: Updates the image of an existing team
      parameters:
        - name: teamId
          in: path
          description: team to delete
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
                type: object
                properties:
                  image:
                    type: string
                    format: binary
                    description: New image to be set on the team
                    required: true
      responses:
        '200':
          description: 'Team succesfully updated'
        '400':
          description: 'Invalid id or image provided'
  /league/add:
    post:
      tags:
        - league
      summary: Adds a new league
      description: New league that will include new teams
      operationId: addLeague
      requestBody:
        content:
          multipart/form-data:
            schema:
                type: object
                properties:
                  name: 
                    type: string
                    description: Name of the new team
                    required: true
                  image:
                    type: string
                    format: binary
                    description: Appropiate logo for the new team
                    required: true
      responses:
              '200':
                description: Team schema from mongoose
                content:
                  application/json:
                    schema: 
                      $ref: '#/components/schemas/League'
  /league:
    get:
      tags:
        - league
      summary: Returns all available leagues
      description: Returns all available leagues in database
      operationId: getAllLeagues
      responses:
        '200':
          description: Available leagues
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/League'
components:
  schemas:
    Team:
      required:
        - _id
        - name
        - image
        - league
        - __v0
      type: object
      properties: 
        _id:
          type: String
          example: 66d6f939d02d29f6426b564f
        name: 
          type: string
          example: F.C Barcelona
        image:
          type: string
          example: https://res.cloudinary.com/dxgbzekei/image/upload/v1725364538/e2uqmqouvga7ukr1yqwl.png
        league:
          type: string
          enum:
            - LaLiga
            - LaLiga2
          example: LaLiga
        __v:
          type: string
          example: 0
    League:
      required:
        - _id
        - name
        - image
        - __v0
      type: object
      properties: 
        _id:
          type: String
          example: 66d6f939d02d29f6426b564f
        name: 
          type: string
          example: LaLiga
        image:
          type: string
          example:
        __v:
          type: string
          example: 0
